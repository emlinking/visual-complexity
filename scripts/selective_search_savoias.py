# -*- coding: utf-8 -*-
"""
selective_search_savoias.py

A script to perform selective search for object locations on SAVOIAS images.
Created on Mon Jun 13 20:54:58 2022

@author: linel
"""
import skimage.io
import selective_search
import time
import os
import pickle

def selective_search_batch(imgs: list, mode : str='fast', 
                           random_sort=False) -> list:
    """
    Perform selective_search for object locations on a list of imgs.
    
    Parameters:
    imgs : list - A list of image paths (URL or path/to/file).
    
    mode : str - default='fast', other choices are 'single' and 'quality'. 
    See https://github.com/ChenjieXu/selective_search for explanation of modes.
    
    random_sort : bool - default=False. Whether to pseudorandomly sort images.
    
    Returns:
    a list of (img_path, boxes) pairs where boxes is a list of boxes (x,y,w,h)
    bounding potential object locations generated by selective search.
    """
    result = []
    for path in imgs:
        img = skimage.io.imread(path)
        boxes = selective_search.selective_search(img, mode, random_sort)
    
        result.append((path, boxes))
    
    return result

if __name__ == '__main__':
    start = time.perf_counter()
    f = open('savoias_selective_search_log.txt', 'w')
    
    ## Interior Design
    try:
        # get list of image paths
        interior_imgs = [os.path.join('/scratch/el55/Savoias-Dataset/Images/Interior Design', 
                                  img_name) 
                     for img_name in 
                     os.listdir('/scratch/el55/Savoias-Dataset/Images/Interior Design') 
                     if img_name.endswith('.jpg')]
        
        # perform selective search
        interior_result = selective_search_batch(interior_imgs)
        
        # save results
        pickle.dump(interior_result, 
                    open('/scratch/el55/visual-complexity/interior_sel_search.p', 
                         'wb'))
    except BaseException as err:
        message = str(type(err)) + ' while performing selective search on interior images.'
        f.write(message)
        
    ## Objects
    try:
        object_imgs = [os.path.join('/scratch/el55/Savoias-Dataset/Images/Objects', 
                                  img_name) 
                     for img_name in 
                     os.listdir('/scratch/el55/Savoias-Dataset/Images/Objects') 
                     if img_name.endswith('.jpg')]
        object_result = selective_search_batch(object_imgs)
        pickle.dump(object_result, 
                    open('/scratch/el55/visual-complexity/object_sel_search.p', 
                         'wb'))
    except BaseException as err:
        message = str(type(err)) + ' while performing selective search on object images.'
        f.write(message)
         
    ## Scenes
    try:
        scene_imgs = [os.path.join('/scratch/el55/Savoias-Dataset/Images/Scenes', 
                                  img_name) 
                     for img_name in 
                     os.listdir('/scratch/el55/Savoias-Dataset/Images/Scenes') 
                     if img_name.endswith('.jpg')]
        scene_result = selective_search_batch(scene_imgs)
        pickle.dump(scene_result, 
                    open('/scratch/el55/visual-complexity/scene_sel_search.p', 
                         'wb'))
    except BaseException as err:
        message = str(type(err)) + ' while performing selective search on scene images.'
        f.write(message)
        
    ## log time to selective search
    stop = time.perf_counter()
    
    f.write('Time to perform selective search: {0:.4f}s'.format(stop - start))
    f.close